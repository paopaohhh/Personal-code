#-*- coding : utf-8 -*-
# coding: utf-8
import datetime
import requests
import pandas as pd
import numpy as np
import torch
import re
import gc
import math
import random
import time
import torch.nn.functional as F
import torchvision.transforms as transforms
from torch import nn
from torch.utils.data import DataLoader, Dataset, random_split
from torch.utils.tensorboard import SummaryWriter

def none_func(value, none_str):
    '''空值转换函数'''
    if value == none_str:
        return None
    else:
        return value
# df_0代表2020年报，包含市盈率、市净率、以及股价变动
# df_1 = pd.read_csv('D:/股价 小样本/原型网络/data/stock2020 训练集.csv')
# df_2 = pd.read_csv('D:/股价 小样本/原型网络/data/stock2020 测试集.csv')
# df_0 = pd.concat([df_1, df_2])
df_0 = pd.read_csv('D:/股价 小样本/原型网络/data/全指标/stock2020 缺少第四季度和PEPB百分位数.csv')

# 读取出来所需的股票
# code_request_str = '839729,605058,603909,603678,603305,601969,601882,601600,601138,600993,600970,600282,600196,600022,600011,300795,300294,300229,300069,300047,002982,002801,002649,002648,002463,000786,688077,605111,603950,603912,603893,603719,603045,603013,601886,601865,600995,600980,600898,600794,600714,600705,600655,600596,600583,600470,600435,600415,600330,600284,600237,600232,600141,300862,300821,300787,300727,300517,300131,300125,002978,002765,002709,002597,002469,002407,002379,002245,002237,002188,002155,002139,002136,001979,000877,000868,000862,000819,000810,000807,000524,688186,300767,002866,002629,688020,603993,603615,603595,603186,601899,601677,600963,600861,600841,600803,600728,600588,600507,600449,600422,600332,600210,600176,600168,600036,300900,300697,300647,300640,300562,300289,300160,300142,300128,300121,300059,002560,002492,002315,002004,000655,000608,000407,833874,833819,688508,603881,603813,603806,603392,603217,601318,600976,600933,600860,600720,600702,600660,600386,600151,300786,300765,300314,003816,003000,002879,002876,002865,002838,002664,002549,002507,002478,002306,002231,002114,002080,001914,000905,000750,000520,000058,000029,688301,603866,601588,600511,600315,600207,300688,300453,002938,002480,000856,000661,000401,000045,605123,603919,603335,600862,600409,600366,600353,300919,002912,002731,002644,002515,002182,002167,002013,000429,000048,688586,603773,603356,603330,603093,603078,603077,603018,600973,600765,600749,600746,600523,600309,600178,600058,300848,300835,300721,002996,002916,002728,002611,002420,002324,002283,002233,002190,000050,688536,600873,300211,002777,603477,603103,600761,600306,600211,600113,600050,002817,002198,000795,688363,688018,605299,603303,601016,600992,600830,600433,600212,300871,300751,300382,300285,002419,002320,002056,000915,000708,000408,000062,688600,688357,688037,605358,603938,603860,603601,603535,603390,603025,600989,600603,600552,600063,300304,002832,002552,002346,002273,000739,000707,000026,000001,603901,300842,000712,000586,000063,600681,600481,300896,300801,300772,300437,300001,002033,000688,000589,300083,600557,300496,833994,605136,603826,300890,300873,603179,600255,600231,300692,000552,000509,300653,300631,300568,300424,300182,300033,002843,688368,002947,002759,002402,300050,603169,002092,000809,601908,002984,000798,300390,300803,002452,002107,832317,000700,002740,002719,002531,600322,600872,002554,300495,600856,002310,002682,002436,002377,300367,300029,603517,002842,600734,688556,300606,002098,605388,300461,300022,688096,600812,600491,300305,000937,002738,002256,300217,002770,300703,300651,300021,688001,002460,002431,600382,603157,003023,300106,002064,002871,002411,002015,300478,603021,600093,603557,600136,002618,000732,600078,300287,002328,002160,002986,603789,002510,600070,002699,600393,300507,300417,002466,688313,600522,600403,600187,002669,002535,600358,600090,000892,300051,603709,603613,603508,603007,000996,000070,603319,601611,600107,002292,600988,300158,002655,300167,000971,000638,000056,000692,688086,600613,688199,600321,688567,600796,300812,300541,300152,002456,002200,000422,600193,600039,300810,300319,300220,002694,002592,002021,688318,688025,601599,600165,300266,871396,688010,300603,300147,002052,603036,300312,300269,300093,300045,002005,836149,835640,688218,688108,600359,300141,300733,300180,836433,688418,688007,603286,601699,601168,300411,834021,688256,300280,300038,603768,688286,300143,600706,002145,002002,000735,300863,300262,300195,600310,300177,002380,688051,601127,002665,688068,002562,002501,688366,300793,300553,300027,688229,600725,600517,300196,002932,002929,002551,002303,000935,688081,688027,688022,603043,300446,300245,002583,002447,002313,603128,600671,002823,300246,300203,002845,002742,002024,000659,000040,300371,300348,300509,300161,688277,603729,300221,300178,002086,688033,603197,603158,601118,300434,002433,834415,832000,688686,688298,688268,688266,688222,688093,605318,605255,603998,603979,603959,603900,603876,603859,603855,603825,603819,603777,603767,603737,603730,603716,603612,603608,603607,603598,603589,603566,603518,603507,603398,603378,603358,603355,603338,603323,603299,603269,603199,603195,603177,603136,603131,603117,603116,603068,603030,601990,601985,601949,601877,601838,601718,601117,601108,601020,601006,601001,600996,600977,600936,600919,600887,600886,600881,600880,600836,600791,600779,600771,600764,600739,600735,600718,600661,600652,600626,600601,600584,600559,600487,600448,600405,600400,600361,600360,600343,600338,600333,600311,600293,600280,600265,600236,600225,600203,600199,600198,600191,600190,600148,600131,600122,600091,600082,600035,300925,300836,300833,300792,300760,300724,300663,300613,300560,300530,300477,300472,300469,300353,300339,300336,300300,300283,300278,300276,300263,300255,300225,300209,300199,300157,300109,300096,300094,300079,300044,300024,300013,300010,300004,003029,003005,002960,002959,002956,002943,002941,002933,002919,002883,002875,002870,002869,002863,002856,002853,002811,002786,002780,002769,002761,002760,002753,002739,002735,002729,002722,002717,002707,002684,002679,002676,002650,002647,002634,002620,002619,002617,002615,002613,002607,002584,002582,002581,002547,002545,002543,002538,002529,002527,002517,002511,002505,002503,002499,002495,002488,002487,002485,002473,002467,002448,002440,002437,002414,002412,002408,002387,002375,002371,002358,002357,002354,002348,002343,002336,002326,002325,002304,002286,002276,002275,002266,002263,002244,002239,002219,002217,002213,002212,002210,002199,002195,002170,002161,002157,002154,002153,002099,002095,002069,002065,002061,002040,002037,002034,002016,000980,000966,000957,000930,000925,000923,000913,000903,000883,000882,000875,000861,000826,000815,000813,000785,000755,000752,000710,000680,000676,000673,000651,000637,000628,000615,000609,000601,000587,000584,000545,000540,000534,000516,000506,000410,000061,000030,000007,836263,688595,688578,688566,688529,688528,688379,688336,688135,688133,688126,688123,688095,688080,688069,688063,688056,688055,688002,605338,605333,605288,605188,605183,605151,605118,605001,603980,603969,603968,603966,603960,603958,603949,603948,603939,603937,603915,603896,603895,603883,603861,603858,603828,603818,603779,603778,603755,603697,603687,603680,603676,603665,603662,603648,603639,603630,603628,603619,603617,603599,603587,603555,603527,603520,603499,603456,603439,603387,603365,603348,603321,603316,603306,603301,603277,603268,603256,603229,603208,603188,603133,603110,603106,603081,603080,603063,603028,603003,601900,601860,601858,601778,601606,601577,601500,601162,601139,601113,601086,601003,600939,600926,600863,600834,600804,600722,600711,600703,600679,600665,600654,600638,600629,600617,600612,600578,600568,600543,600530,600520,600518,600501,600499,600462,600421,600398,600390,600388,600339,600297,600285,600241,600233,600222,600217,600200,600197,600180,600163,600150,600132,600117,600108,600100,600083,600079,600076,600056,600055,600023,600020,430489,300882,300864,300808,300805,300785,300781,300770,300769,300750,300731,300716,300712,300706,300679,300673,300672,300667,300656,300616,300609,300599,300591,300589,300586,300576,300572,300552,300549,300547,300546,300545,300542,300522,300518,300512,300506,300500,300494,300479,300474,300470,300467,300463,300459,300447,300444,300440,300438,300429,300428,300418,300410,300409,300399,300392,300391,300384,300383,300377,300357,300356,300350,300331,300328,300325,300317,300293,300292,300273,300268,300267,300252,300236,300232,300230,300213,300201,300198,300192,300191,300189,300187,300183,300172,300166,300155,300153,300149,300137,300132,300115,300111,300108,300099,300097,300062,300058,300052,300049,300035,300025,300020,300008,300003,300002,003026,003025,003016,003011,002995,002989,002976,002972,002953,002928,002913,002907,002900,002897,002888,002881,002860,002855,002849,002835,002831,002826,002822,002808,002792,002789,002788,002783,002781,002773,002755,002752,002748,002745,002743,002723,002713,002705,002700,002696,002685,002663,002659,002651,002642,002625,002588,002574,002548,002544,002530,002520,002508,002502,002491,002457,002432,002429,002422,002418,002409,002403,002400,002397,002386,002382,002351,002341,002337,002335,002333,002332,002331,002316,002309,002298,002291,002277,002227,002224,002201,002173,002150,002146,002128,002121,002096,002090,002082,002077,002076,002073,002048,002047,002035,002022,000995,000948,000906,000893,000886,000869,000858,000831,000799,000782,000777,000729,000717,000713,000697,000678,000672,000668,000591,000563,000560,000554,000547,000529,000510,000419,000158,000004,835508,831856,688608,688579,688519,688215,688168,688128,688127,688090,688036,605500,605376,605018,605007,605003,603991,603978,603928,603908,603809,603726,603707,603693,603681,603679,603655,603559,603551,603528,603488,603337,603333,603332,603283,603160,603121,603108,603088,603086,603069,603056,603040,603037,603033,603032,603015,603011,603009,603001,601890,601702,601698,601669,601666,601619,601609,601566,601366,601216,601187,601101,601100,601098,601058,601011,600998,600981,600967,600959,600869,600866,600824,600809,600768,600715,600704,600696,600668,600636,600623,600608,600606,600570,600562,600538,600537,600529,600506,600503,600483,600480,600476,600371,600335,600301,600290,600260,600258,600239,600227,600189,600177,600169,600161,600158,600145,600137,600130,600123,600119,600110,600103,600060,600019,300881,300859,300853,300802,300791,300778,300762,300756,300752,300745,300743,300736,300720,300713,300710,300700,300694,300693,300687,300660,300654,300643,300635,300630,300604,300602,300588,300587,300581,300578,300569,300567,300561,300550,300540,300527,300519,300513,300505,300497,300489,300487,300464,300441,300439,300432,300415,300408,300407,300405,300404,300387,300380,300379,300375,300369,300359,300355,300349,300344,300340,300335,300326,300318,300315,300313,300311,300308,300307,300301,300291,300274,300270,300261,300260,300254,300241,300235,300222,300197,300175,300169,300163,300145,300139,300135,300124,300118,300103,300100,300091,300089,300088,300080,300075,300071,300068,300065,300064,300053,300043,300042,300040,300023,300011,002999,002997,002969,002966,002958,002942,002921,002915,002906,002901,002893,002872,002851,002848,002837,002802,002796,002785,002766,002758,002756,002741,002718,002646,002641,002630,002624,002587,002559,002540,002453,002425,002423,002406,002378,002374,002364,002349,002347,002327,002318,002317,002295,002280,002269,002249,002235,002207,002194,002180,002164,002137,002132,002122,002068,002046,002038,002036,000983,000961,000955,000950,000931,000889,000848,000797,000766,000758,000731,000719,000711,000701,000691,000683,000667,000572,000566,000498,000150,000078,000020,000019,000017,830946,688590,688577,688136,688098,688088,688058,605178,605088,603519,603226,603196,603156,603155,603118,603112,600521,600439,600337,430198,300885,300872,300851,300849,300840,300839,300830,300819,300813,300811,300789,300766,300763,300746,300740,300718,300698,300691,300680,300676,300669,300657,300652,300645,300644,300626,300619,300618,300605,300600,300585,300575,300554,300535,300510,300492,300486,300466,300462,300460,300433,300426,300419,300413,300393,300345,300309,300272,300248,300219,300171,300168,300136,300134,300133,300117,300113,300102,300077,003017,002990,002952,002917,002627,002621,002605,002497,002438,002057,000863,688518,688335,688288,688066,688023,603983,603829,603787,603721,603718,603701,603515,603506,603486,603408,603266,603198,603100,603083,603041,603012,601999,601595,601518,601229,600990,600983,600929,600918,600877,600864,600859,600810,600773,600726,600708,600645,600590,600535,600525,600467,600436,600429,600397,600385,600351,600325,600308,600170,600129,600094,600084,600075,300920,300917,300883,300868,300809,300800,300757,300749,300707,300696,300689,300648,300642,300633,300632,300611,300610,300590,300571,300566,300557,300555,300536,300514,300455,300448,300425,300420,300381,300358,300343,300338,300332,300316,300310,300303,300290,300288,300279,300250,300210,300164,300162,300129,300126,300112,300095,300086,300085,300067,300061,300046,300031,002981,002885,002841,002689,002686,002670,002639,002612,002609,002590,002573,002523,002339,002322,002278,002274,002222,002204,002186,002171,002133,002123,002105,002103,002091,000985,000978,000977,000953,000912,000909,000825,000823,000716,000695,000685,000633,000613,000530,000503,000411,837242,834475,831010,688678,688618,688560,688510,688466,688390,688312,688165,688085,605066,603888,603878,603871,603868,603843,603833,603811,603803,603797,603728,603703,603658,603629,603605,603579,603558,603389,603380,603311,603309,603238,603232,603221,603218,603200,603187,603139,603089,603031,603016,601965,601928,601339,601226,601222,601199,600831,600820,600807,600766,600658,600594,600586,600551,600532,600406,600392,600312,600216,600201,600182,600172,600080,600054,600025,300915,300913,300909,300897,300892,300880,300861,300858,300831,300826,300817,300780,300776,300701,300684,300683,300662,300661,300649,300637,300615,300607,300597,300565,300564,300551,300525,300502,300493,300451,300450,300427,300397,300396,300394,300388,300370,300364,300333,300306,300215,300205,300170,300165,300151,300150,300144,300140,300123,300087,300039,300034,300032,300015,003002,002957,002935,002931,002930,002927,002923,002902,002892,002880,002861,002857,002829,002803,002787,002778,002763,002751,002732,002657,002654,002606,002579,002576,002464,002443,002428,002427,002394,002338,002334,002307,002293,002284,002281,002252,002250,002248,002246,002240,002215,002112,002110,002100,002093,002062,002027,002011,000968,000967,000929,000899,000767,000709,000682,000677,000650,000603,000595,000155,000153,000032,688668,688198,688118,688030,603963,603931,603786,603698,603636,603618,603379,603328,603322,603260,603185,603002,601888,601360,601198,601163,600969,600839,600674,600573,600461,600446,600410,600328,600135,300906,300889,300867,300847,300779,300768,300758,300739,300737,300695,300628,300627,300543,300498,300484,300435,300376,300346,300334,300330,300321,300072,003012,002816,002698,002578,002568,002526,002504,002476,002391,002308,002301,002268,002247,002221,002214,002178,002087,002074,002067,002059,002049,000622,000598,832278,688555,688521,688369,688300,688258,688181,688160,603955,603918,603848,603739,603696,603683,603533,603192,603023,603022,601399,601368,601012,600987,600851,600778,600769,600689,600667,600582,600572,300923,300921,300911,300894,300827,300799,300430,300402,300368,300284,300282,300277,300271,300253,300247,300098,300030,300012,002970,002949,002908,002737,002733,002702,002693,002691,002673,002633,002556,002536,002475,002392,002385,002251,002228,002208,002189,002165,002124,002083,002054,002041,000963,000859,000818,000788,000762,000016,000010,838030,835368,688788,688596,688588,688557,688526,688338,688310,688309,688179,688029,688004,605366,605186,605158,605116,603970,603956,603886,603885,603882,603879,603815,603706,603700,603666,603661,603638,603610,603583,603538,603353,603236,603233,603225,603178,603168,603167,603113,603109,603105,603096,603059,601798,601789,601689,601568,601567,601028,601010,601002,600982,600968,600855,600822,600802,600797,600795,600782,600767,600758,600740,600737,600695,600653,600556,600550,600527,600510,600509,600475,600468,600395,600389,600370,600352,600326,600276,600262,600261,600243,600229,600215,600179,600153,600105,600071,600048,300888,300879,300857,300841,300829,300729,300719,300709,300702,300668,300664,300612,300598,300583,300580,300573,300533,300520,300515,300454,300422,300406,300366,300329,300258,300243,300240,300237,300204,300122,300116,300082,300081,300074,300048,300014,003028,003004,002998,002992,002975,002963,002884,002827,002790,002767,002734,002701,002692,002674,002661,002645,002599,002542,002513,002500,002489,002483,002481,002451,002442,002441,002434,002417,002413,002330,002311,002299,002282,002254,002230,002144,002111,002102,002101,002078,002043,002026,000962,000885,000703,000625,000581,000546,000526,000519,000430,000420,000403,000159,000036,000027,000008,839167,688585,688233,688219,688039,603369,430510,300855,300838,300798,300686,300251,300214,002439,002363,000851,688028,605199,605179,603986,603788,603669,603656,603569,603568,603383,601801,601668,601615,600865,600826,600818,600790,600789,600743,600697,600693,600666,600641,600639,600571,600566,600498,600463,600383,600376,600356,600120,600088,600072,300918,300856,300806,300730,300705,300638,300625,300412,300401,300298,300275,300184,300084,002940,002899,002800,002671,002566,002415,002376,002372,002344,002279,002264,002229,002223,002191,002135,002028,000793,000753,000623,000557,000518,000507,000088,831445,830839,688698,688658,688408,688202,688099,688017,688006,688005,605377,605218,605166,605100,603999,603927,603917,603867,603823,603808,603790,603757,603699,603650,603637,603616,603611,603501,603466,603359,603258,603161,603138,603076,603053,603050,603035,603027,603000,601952,601678,601616,601579,601512,601311,601233,601116,600868,600867,600854,600847,600757,600710,600707,600694,600691,600531,600512,600505,600497,600496,600488,600378,600288,600287,600219,600213,600206,600159,600157,600101,300922,300916,300899,300898,300893,300875,300869,300666,300641,300624,300534,300516,300449,300400,300386,300373,300299,300234,300148,300063,300005,002965,002950,002890,002877,002840,002828,002821,002805,002775,002724,002631,002601,002557,002537,002287,002271,002218,002209,002127,000888,000779,000665,000632,000421,000025,835184,688561,688520,688488,688398,605336,605266,605168,603995,603977,603920,603898,603880,603776,603489,603421,603388,603320,603239,603087,603085,601515,600979,600895,600844,600684,600630,600628,600516,600479,600478,600459,600355,600327,600295,600278,600111,600098,600089,600053,430047,300912,300901,300895,300891,300884,300870,300843,300796,300775,300622,300621,300608,300365,300257,300239,300107,003007,003003,002991,002987,002971,002946,002905,002858,002852,002824,002799,002757,002750,002678,002608,002516,002493,002482,002446,002444,002384,002340,002305,002296,002216,002205,002169,002141,002126,002009,000960,000927,000816,000736,000671,000652,000630,000599,000570,000301,000012,688393,688377,603838,603580,603297,601177,601019,600848,600815,600683,600348,600313,600162,600099,300442,300200,002920,002818,002152,000958,000860,000573,688679,688558,688156,603992,603839,603685,603565,603351,603345,603331,603279,603129,603079,601966,601388,601137,600883,600845,600751,600581,600438,600346,600152,600051,300828,300818,300755,300685,300665,300341,300323,300212,300185,300181,300120,003019,002939,002926,002864,002815,002563,002395,002388,002360,002267,002183,002084,002045,002044,002025,002023,000778,000725,000720,000635,000631,000582,000090,000042,838163,688550,605128,603556,603181,603095,603019,600971,600466,300910,003015,002951,002768,002572,688568,688365,688299,688101,688015,603817,603596,603588,603367,603339,603298,603290,603183,603058,601686,600984,600770,600592,600490,600456,600452,600444,600367,600235,600125,600106,300876,300865,300825,300671,300594,300539,300468,300354,300228,300227,300208,300041,003020,003008,002955,002791,002687,002677,002658,002603,002353,002314,002300,002116,002108,000988,000922,000718,000561,000541,000536,000400,835670,688580,688003,605169,605099,605068,603985,603686,603180,600889,600526,600057,300905,300723,300717,300584,300528,300508,300009,003001,002774,002690,002571,002532,002051,000949,000096,688011,603926,603586,600269,600008,300908,300360,300130,002979,002660,002474,002058,000902,603989,603982,603717,603689,601377,600884,600664,600642,300154,002878,002809,002577,002416,001965,000933,603967,603682,603602,603214,601519,601158,600890,600558,600396,600379,600127,600109,600061,300636,300634,300538,002918,002736,002598,002567,002312,002302,002029,002003,001896,001696,000751,000702,000656,000617,000548,000531,000089,000049,000028,688981,603997,601236,601066,600962,600833,600579,600097,300529,300436,300226,300105,002977,002697,002479,002389,002270,002242,002032,000951,000727,000600,688777,688569,688513,688289,688089,688065,688016,605258,605222,603987,603899,603877,603799,603530,603368,603326,603278,603127,603067,603066,603060,603026,601881,601696,601658,601618,601333,601326,601298,601231,601068,601038,600908,600857,600850,600801,600798,600792,600760,600616,600598,600597,600536,600528,600486,600391,600305,600273,600183,600171,600143,600096,600066,600021,600018,600017,600006,300823,300815,300777,300771,300699,300678,300595,300532,300521,300491,300490,300485,300347,300223,300218,003021,003013,002968,002910,002867,002859,002797,002746,002726,002596,002594,002585,002534,002459,002410,002399,002398,002390,002362,002350,002342,002294,002185,002159,002020,002012,002007,000975,000920,000919,000878,000837,000776,000768,000738,000728,000721,000629,000590,000585,000550,000533,000528,000501,000099,000069,000039,831370,688185,688009,603159,603126,601717,601601,600776,600676,600600,600377,600028,600012,300886,300759,002703,000997,000404,688551,688389,688189,688060,603906,603393,603363,603336,603115,603055,603042,603005,601991,601939,601727,601607,601398,601188,601155,600999,600997,600985,600784,600775,600756,600748,600724,600678,600657,600602,600477,600455,600426,600336,600223,600188,600009,600000,300783,300504,300351,300179,300127,300092,002850,002695,002635,002521,002490,002401,002370,002297,002241,002162,002017,000890,000811,000789,000715,000705,000576,000505,000031,000014,835185,688505,688399,688360,688308,688078,605009,603916,603903,603738,603657,603578,603386,603300,603267,603220,601975,601880,601872,601857,601238,601211,601015,600965,600858,600780,600716,600298,600234,600173,600116,600104,300845,300797,300726,300725,300558,300481,300465,300286,300066,300037,003027,002962,002825,002782,002706,002632,002580,002553,002454,002290,002151,002039,002008,000982,000910,000559,000543,000488,688386,603936,603327,603099,601918,601336,600901,600879,600871,600823,600741,600692,600662,600548,600138,600118,600007,300903,300877,300790,300523,002903,002896,002820,002653,002522,002109,002075,603663,603585,601688,601069,600502,600238,300788,300337,003022,002937,002819,002586,002236,688699,688166,603801,603660,603590,603189,603038,603010,600742,600731,600540,600267,600160,300902,300846,300837,300655,300224,300138,300101,300073,003018,002911,002593,002226,002225,002119,002117,002097,000965,000830,000636,000551,000517,000513,000055,430418,002988,603429,601005,600719,600425,600228,300623,300249,300193,300110,002925,002886,002539,002319,000989,000987,000828,000791,000610,000565,603505,601126,600419,600209,600030,300887,300748,300016,002628,000698,603712,600800,600785,300398,002985,002812,002352,002211,002176,000612,600961,600416,300548,300483,300456,300416,300114,002882,002810,000597,688516,603659,603500,603396,603020,601956,600975,600732,600577,300690,300681,300677,300577,300563,300501,300403,300242,300207,300018,300007,002993,002868,002727,600460,600292,002715,688571,603385,600565,300231,688188,002134,002129,000100,605006,603976,603536,603008,600888,000737,688208,600202,300822,300629,300238,002887,605369,688177,603516,003009,000990,002519,603212,600903,300738,605050,300816,300860,002895,603856,002846,002192,002130,601218,600885,000690,300617'
# code_list = []
# while code_request_str != '':
#     code_str = code_request_str[:6]
#     code_request_str = code_request_str[7:]
#     code_list.append(code_str)
# len(code_list)
df_0['SECURITY_CODE'] = df_0['SECURITY_CODE'].str.replace('.SOTCK', '')
code_list = df_0['SECURITY_CODE'].tolist()
len(code_list)

# 把2019年三季报所需股票的财务数据提取出来
data_yjbb_20193 = pd.DataFrame()
for i in range(104):
    cookies = {
        'qgqp_b_id': '0f4360f70c40d03e31818d460bd070f1',
        'em_hq_fls': 'js',
        'emshistory': '%5B%22002402%22%2C%22002759%22%2C%22301110%22%2C%22002947%22%5D',
        'em-quote-version': 'topspeed',
        'xsb_history': '834406%7C%u8FEA%u5A01%u666E%2C871484%7C%u805A%u5408%u7535%u529B%2C830880%7C%u706B%u51E4%u51F0%2C873332%7C%u7F8E%u8FB0%u73AF%u4FDD%2C870156%7C%u745C%u6B23%u7535%u5B50%2C834045%7C%u6E05%u4F17%u79D1%u6280',
        'cowminicookie': 'true',
        'HAList': 'ty-1-000300-%u6CAA%u6DF1300%2Ca-sh-603132-%u91D1%u5FBD%u80A1%u4EFD%2Ca-sz-002947-%u6052%u94ED%u8FBE%2Ca-sz-000509-*ST%u534E%u5851%2Ca-sh-603209-%u5174%u901A%u80A1%u4EFD%2Ca-sh-600272-%u5F00%u5F00%u5B9E%u4E1A%2Ca-sh-603169-%u5170%u77F3%u91CD%u88C5%2Ca-sz-301110-%u9752%u6728%u80A1%u4EFD%2Ca-sz-002759-%u5929%u9645%u80A1%u4EFD%2Ca-sz-002402-%u548C%u800C%u6CF0',
        'intellpositionL': '951.5px',
        'cowCookie': 'true',
        'st_si': '92882130502304',
        'st_asi': 'delete',
        'st_pvi': '02992749256523',
        'st_sp': '2022-02-21%2020%3A55%3A58',
        'st_inirUrl': 'https%3A%2F%2Fdata.eastmoney.com%2Fbbsj%2F202112%2Fxjll.html',
        'st_sn': '12',
        'st_psi': '20220328115022408-113300301066-3943520551',
        'JSESSIONID': 'CED22E9BD3DD1F2C017726A266D261A9',
        'intellpositionT': '746px',
    }

    headers = {
        'Connection': 'keep-alive',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="99", "Microsoft Edge";v="99"',
        'sec-ch-ua-mobile': '?0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.52',
        'sec-ch-ua-platform': '"Windows"',
        'Accept': '*/*',
        'Sec-Fetch-Site': 'same-site',
        'Sec-Fetch-Mode': 'no-cors',
        'Sec-Fetch-Dest': 'script',
        'Referer': 'https://data.eastmoney.com/',
        'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6',
    }

    params = (
        ('callback', 'jQuery1123041822420293226914_1648442210154'),
        ('sortColumns', 'UPDATE_DATE,SECURITY_CODE'),
        ('sortTypes', '-1,-1'),
        ('pageSize', '50'),
        ('pageNumber', f'{i+1}'),
        ('reportName', 'RPT_LICO_FN_CPD'),
        ('columns', 'ALL'),
        ('filter', '(REPORTDATE=\'2019-09-30\')'),
    )

    response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get', headers=headers, params=params, cookies=cookies)

    #NB. Original query string below. It seems impossible to parse and
    #reproduce query strings 100% accurately so the one below is given
    #in case the reproduced version is not "correct".
    # response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get?callback=jQuery1123041822420293226914_1648442210154&sortColumns=UPDATE_DATE%2CSECURITY_CODE&sortTypes=-1%2C-1&pageSize=50&pageNumber=1&reportName=RPT_LICO_FN_CPD&columns=ALL&filter=(REPORTDATE%3D%272019-09-30%27)', headers=headers, cookies=cookies)

    # 把数据存储在df中
    response_before_eval = response.text[42:-1].replace('null', 'None').replace('true', 'True').replace('false', 'False')
    data = pd.DataFrame(eval(response.text[42:-1].replace('null', 'None').replace('true', 'True').replace('false', 'False'))['result']['data'])
    # 合并两个dataframe
    if i == 0:
        data_yjbb_20193 = data
    else:
        data_yjbb_20193 = pd.concat([data_yjbb_20193, data], ignore_index=True)
    # data_ybjj

# 把2019年三季报中所需股票的数据提取出来
df_20193 = data_yjbb_20193
for i in df_20193.index.to_list():
    if df_20193.loc[i, 'SECURITY_CODE'] not in code_list:
        df_20193.drop(index=i, inplace=True)

# 发现有些股票没有三季报，因此再次筛选股票，接下来按照
# code_list_1来筛选股票
code_list_1 = df_20193['SECURITY_CODE'].to_list()
for x in code_list:
    if x not in code_list_1:
        print(x)
print(code_list_1)

# 取出2019年报
data_yjbb_2019 = pd.DataFrame()
for i in range(236):
    cookies = {
    'qgqp_b_id': '0f4360f70c40d03e31818d460bd070f1',
    'em_hq_fls': 'js',
    'emshistory': '%5B%22002402%22%2C%22002759%22%2C%22301110%22%2C%22002947%22%5D',
    'em-quote-version': 'topspeed',
    'xsb_history': '834406%7C%u8FEA%u5A01%u666E%2C871484%7C%u805A%u5408%u7535%u529B%2C830880%7C%u706B%u51E4%u51F0%2C873332%7C%u7F8E%u8FB0%u73AF%u4FDD%2C870156%7C%u745C%u6B23%u7535%u5B50%2C834045%7C%u6E05%u4F17%u79D1%u6280',
    'cowminicookie': 'true',
    'HAList': 'ty-1-000300-%u6CAA%u6DF1300%2Ca-sh-603132-%u91D1%u5FBD%u80A1%u4EFD%2Ca-sz-002947-%u6052%u94ED%u8FBE%2Ca-sz-000509-*ST%u534E%u5851%2Ca-sh-603209-%u5174%u901A%u80A1%u4EFD%2Ca-sh-600272-%u5F00%u5F00%u5B9E%u4E1A%2Ca-sh-603169-%u5170%u77F3%u91CD%u88C5%2Ca-sz-301110-%u9752%u6728%u80A1%u4EFD%2Ca-sz-002759-%u5929%u9645%u80A1%u4EFD%2Ca-sz-002402-%u548C%u800C%u6CF0',
    'cowCookie': 'true',
    'intellpositionL': '951.5px',
    'st_si': '94004129759356',
    'st_asi': 'delete',
    'st_pvi': '02992749256523',
    'st_sp': '2022-02-21%2020%3A55%3A58',
    'st_inirUrl': 'https%3A%2F%2Fdata.eastmoney.com%2Fbbsj%2F202112%2Fxjll.html',
    'st_sn': '17',
    'st_psi': '20220326212129567-113300301066-0153847856',
    'JSESSIONID': '3D98615BCAD06264624D8F483481FE10',
    'intellpositionT': '701px',
    }

    headers = {
        'Connection': 'keep-alive',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="99", "Microsoft Edge";v="99"',
        'sec-ch-ua-mobile': '?0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.46',
        'sec-ch-ua-platform': '"Windows"',
        'Accept': '*/*',
        'Sec-Fetch-Site': 'same-site',
        'Sec-Fetch-Mode': 'no-cors',
        'Sec-Fetch-Dest': 'script',
        'Referer': 'https://data.eastmoney.com/',
        'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6',
    }

    params = (
        ('callback', 'jQuery1123013802625665838053_1648300896144'),
        ('sortColumns', 'UPDATE_DATE,SECURITY_CODE'),
        ('sortTypes', '-1,-1'),
        ('pageSize', '50'),
        ('pageNumber', f'{i+1}'),
        ('reportName', 'RPT_LICO_FN_CPD'),
        ('columns', 'ALL'),
        ('filter', '(REPORTDATE=\'2019-12-31\')'),
    )

    response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get', headers=headers, params=params, cookies=cookies)

    #NB. Original query string below. It seems impossible to parse and
    #reproduce query strings 100% accurately so the one below is given
    #in case the reproduced version is not "correct".
    # response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get?callback=jQuery1123013802625665838053_1648300896144&sortColumns=UPDATE_DATE%2CSECURITY_CODE&sortTypes=-1%2C-1&pageSize=50&pageNumber=1&reportName=RPT_LICO_FN_CPD&columns=ALL&filter=(REPORTDATE%3D%272019-12-31%27)', headers=headers, cookies=cookies)

    # 把数据存储在df中
    response_before_eval = response.text[42:-1].replace('null', 'None').replace('true', 'True')
    data = pd.DataFrame(eval(response_before_eval)['result']['data'])
    data = data[data['TRADE_MARKET'] != '新三板']
    data = data[data['SECURITY_TYPE'] != 'B股']
    # 合并两个dataframe
    if i == 0:
        data_yjbb_2019 = data
    else:
        data_yjbb_2019 = pd.concat([data_yjbb_2019, data], ignore_index=True)
    # data_ybjj

# 取出2019年报中所需股票的财务数据
df_2019 = data_yjbb_2019.copy()
for i in df_2019.index.to_list():
    if df_2019.loc[i, 'SECURITY_CODE'] not in code_list_1:
        df_2019.drop(index=i, inplace=True)

# 把2020年三季报取出来
data_yjbb_20203 = pd.DataFrame()
for i in range(110):
    cookies = {
        'qgqp_b_id': '0f4360f70c40d03e31818d460bd070f1',
        'em_hq_fls': 'js',
        'emshistory': '%5B%22002402%22%2C%22002759%22%2C%22301110%22%2C%22002947%22%5D',
        'em-quote-version': 'topspeed',
        'xsb_history': '834406%7C%u8FEA%u5A01%u666E%2C871484%7C%u805A%u5408%u7535%u529B%2C830880%7C%u706B%u51E4%u51F0%2C873332%7C%u7F8E%u8FB0%u73AF%u4FDD%2C870156%7C%u745C%u6B23%u7535%u5B50%2C834045%7C%u6E05%u4F17%u79D1%u6280',
        'cowminicookie': 'true',
        'HAList': 'ty-1-000300-%u6CAA%u6DF1300%2Ca-sh-603132-%u91D1%u5FBD%u80A1%u4EFD%2Ca-sz-002947-%u6052%u94ED%u8FBE%2Ca-sz-000509-*ST%u534E%u5851%2Ca-sh-603209-%u5174%u901A%u80A1%u4EFD%2Ca-sh-600272-%u5F00%u5F00%u5B9E%u4E1A%2Ca-sh-603169-%u5170%u77F3%u91CD%u88C5%2Ca-sz-301110-%u9752%u6728%u80A1%u4EFD%2Ca-sz-002759-%u5929%u9645%u80A1%u4EFD%2Ca-sz-002402-%u548C%u800C%u6CF0',
        'intellpositionL': '951.5px',
        'cowCookie': 'true',
        'st_si': '92882130502304',
        'st_asi': 'delete',
        'JSESSIONID': '7C472914297A9315984B96E1E0443C8B',
        'intellpositionT': '455px',
        'st_pvi': '02992749256523',
        'st_sp': '2022-02-21%2020%3A55%3A58',
        'st_inirUrl': 'https%3A%2F%2Fdata.eastmoney.com%2Fbbsj%2F202112%2Fxjll.html',
        'st_sn': '14',
        'st_psi': '20220328125120665-113300301066-8030405720',
    }

    headers = {
        'Connection': 'keep-alive',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="99", "Microsoft Edge";v="99"',
        'sec-ch-ua-mobile': '?0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36 Edg/99.0.1150.52',
        'sec-ch-ua-platform': '"Windows"',
        'Accept': '*/*',
        'Sec-Fetch-Site': 'same-site',
        'Sec-Fetch-Mode': 'no-cors',
        'Sec-Fetch-Dest': 'script',
        'Referer': 'https://data.eastmoney.com/',
        'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6',
    }

    params = (
        ('callback', 'jQuery112308749350042524486_1648443080465'),
        ('sortColumns', 'UPDATE_DATE,SECURITY_CODE'),
        ('sortTypes', '-1,-1'),
        ('pageSize', '50'),
        ('pageNumber', f'{i+1}'),
        ('reportName', 'RPT_LICO_FN_CPD'),
        ('columns', 'ALL'),
        ('filter', '(REPORTDATE=\'2020-09-30\')'),
    )

    response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get', headers=headers, params=params, cookies=cookies)

    #NB. Original query string below. It seems impossible to parse and
    #reproduce query strings 100% accurately so the one below is given
    #in case the reproduced version is not "correct".
    # response = requests.get('https://datacenter-web.eastmoney.com/api/data/v1/get?callback=jQuery112308749350042524486_1648443080465&sortColumns=UPDATE_DATE%2CSECURITY_CODE&sortTypes=-1%2C-1&pageSize=50&pageNumber=1&reportName=RPT_LICO_FN_CPD&columns=ALL&filter=(REPORTDATE%3D%272020-09-30%27)', headers=headers, cookies=cookies)

    # 把数据存储在df中
    response_before_eval = response.text[42:-2].replace('null', 'None').replace('true', 'True')
    data = pd.DataFrame(eval(response_before_eval)['result']['data'])
    # 合并两个dataframe
    if i == 0:
        data_yjbb_20203 = data
    else:
        data_yjbb_20203 = pd.concat([data_yjbb_20203, data], ignore_index=True)
    # data_ybjj

# 取出2020年三季报中所需股票的财务数据
df_20203 = data_yjbb_20203.copy()
for i in df_20203.index.to_list():
    if df_20203.loc[i, 'SECURITY_CODE'] not in code_list_1:
        df_20203.drop(index=i, inplace=True)
# 经过检测股票筛选结果都是相同的
code_list_20203 = df_20203['SECURITY_CODE'].to_list()
for i in code_list_20203:
    if i not in code_list:
        print(i)

# 都取出来2080个股票就以此作为数据集，先将各个df重新设置索引
df_2019.reset_index(drop=True, inplace=True)
df_20193.reset_index(drop=True, inplace=True)
df_20203.reset_index(drop=True, inplace=True)

# 测试筛选出数值列，然后才能相减获得第四季度数据
# 经过测试发现2019年第三季度没有DEDUCT_BASIC_EPS和ZXGXL两列数据，
# 从网页中看好像并不重要，因此三个df直接drop这两列
df_2019.drop(columns=['DEDUCT_BASIC_EPS', 'ZXGXL'], inplace=True)
df_20193.drop(columns=['DEDUCT_BASIC_EPS', 'ZXGXL'], inplace=True)
df_20203.drop(columns=['DEDUCT_BASIC_EPS', 'ZXGXL'], inplace=True)

# 把要相减的df按股票代码排列好，然后才能相减
# 2019年数据
df_2019.sort_values(by='SECURITY_CODE', inplace=True)
df_20193.sort_values(by='SECURITY_CODE', inplace=True)

# 2020年数据，先删除两列，然后去掉不在股票列表的股票，然后排序
df_0.drop(columns=['DEDUCT_BASIC_EPS', 'ZXGXL'], inplace=True)
for i in df_0.index.to_list():
    if df_0.loc[i, 'SECURITY_CODE'] not in code_list:
        df_0.drop(index=i, inplace=True)

df_0.sort_values(by='SECURITY_CODE', inplace=True)
df_20203.sort_values(by='SECURITY_CODE', inplace=True)

# 重置index
df_2019.reset_index(drop=True, inplace=True)
df_20193.reset_index(drop=True, inplace=True)
df_0.reset_index(drop=True, inplace=True)
df_20203.reset_index(drop=True, inplace=True)

# 检测股票排序是否正确，经过检测，所有df内的股票都相同，排序也都完全一样
# df_2019['SECURITY_CODE'] == df_20193['SECURITY_CODE']
for x in df_0.index.to_list():
    if df_0.loc[x, 'SECURITY_CODE'] not in code_list_1:
        df_0.drop(index=x, inplace=True)
df_0.reset_index(drop=True, inplace=True)
# print(len(df_0['SECURITY_CODE']),len(df_20203['SECURITY_CODE']))
# (df_0['SECURITY_CODE'].squeeze() == df_20203['SECURITY_CODE'])
# for i in df_0.index.to_list():
#     if df_0.loc[i, 'SECURITY_CODE'] != df_20203.loc[i, 'SECURITY_CODE']:
#         print('not')
# print(df_0['SECURITY_CODE'])
# print(df_20203['SECURITY_CODE'])

# 得到第四季度财务数据，接下来加上object类数据即可
df_20194 = df_2019.select_dtypes(exclude='object') - df_20193.select_dtypes(exclude='object')
columns_list = df_20194.columns.to_list()
columns_list_2020 = df_0.columns.to_list()
for i in columns_list:
    if i in columns_list_2020:
        columns_list_2020.remove(i)
df_20204 = df_0[columns_list] - df_20203[columns_list]
df_20194 = df_20194.fillna(value=0)
df_20204 = df_20204.fillna(value=0)
df_20194 = pd.concat([df_20194, df_2019.select_dtypes(include='object')], axis=1)
df_20204 = pd.concat([df_20204, df_0[columns_list_2020]], axis=1)
# 丢弃df_20204最后一行，这是多于一行，且全部为空值，
# df_20204.drop(index=0, inplace=True)

# 保存2020和2019第四季度数据

# x 修改股票名称
for i in df_20194.index.to_list():
    df_20194.loc[i, 'SECURITY_CODE'] = ''.join([df_20194.loc[i, 'SECURITY_CODE'], '.STOCK'])
for i in df_20204.index.to_list():
    df_20204.loc[i, 'SECURITY_CODE'] = ''.join([df_20204.loc[i, 'SECURITY_CODE'], '.STOCK'])
df_20194.to_csv('D:/股价 小样本/原型网络/data/全指标/stock2019 第四季度.csv', index=0)
df_20204.to_csv('D:/股价 小样本/原型网络/data/全指标/stock2020 第四季度.csv', index=0)

# 现在计算第四季度收入和利润的变化率，并添加到df_0中，也就是增加到2020年报的数据当中
df_0['第四季度营收变化'] = (df_20204['TOTAL_OPERATE_INCOME'] - df_20194['TOTAL_OPERATE_INCOME']) / df_20194['TOTAL_OPERATE_INCOME']
df_0['第四季度利润变化'] = (df_20204['PARENT_NETPROFIT'] - df_20194['PARENT_NETPROFIT']) / df_20194['PARENT_NETPROFIT']

# 把2020年新的数据保存下来，这次只缺少了PEPB百分位数
for i in df_0.index.to_list():
    df_0.loc[i, 'SECURITY_CODE'] = ''.join([df_0.loc[i, 'SECURITY_CODE'], '.STOCK'])
df_0.to_csv('D:/股价 小样本/原型网络/data/全指标/stock2020 缺少PBPE百分位数.csv', index=0)